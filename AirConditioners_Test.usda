#usda 1.0

def Scope "HelloWorldAirCon" (
    prepend apiSchemas = ["BindingAPI"]
)
{
    # Updated context to match your working setup
    dictionary binding:context = {
        "region": "uscentral",
        "mqttBroker": "mqtt://broker.hivemq.com:1883",  # Your working broker
        "sqlEndpoint": "sql://x6eps4xrq2xudenlfv6naeo3i4-qnsrltphqlxuxjjiiozeegc3aq.msit-datawarehouse.fabric.microsoft.com/alashlakehouse",
        "apiBase": "https://api.test.com"
    }

    # Updated auth - no auth needed for public broker
    dictionary binding:authDefaults:mqtt = {
        "authMethod": "none"  # Public broker = no auth
    }
    dictionary binding:authDefaults:sql = {
        "authMethod": "oauth2",
        "authProfile": "alash-fabric-prod"
    }
    dictionary binding:authDefaults:rest = {
        "authMethod": "oauth2",
        "authProfile": "alash-azure-prod"
    }

    def Cube "AirConditioner_001"
    {
        string deviceName = "aircon3245"

        # MQTT: Cloud Events temperature - Updated for your setup
        double temperature = 0.0 (
            custom token binding:protocol = "mqtt"
            custom token binding:operation = "stream"
            custom string binding:uri = "${mqttBroker}"
            custom string binding:topic = "cloudevents/temperature"     # Your topic
            custom string binding:jsonPath = "$.data.temperature"       # Extract from Cloud Event
        )

        # The rest stays the same...
        string serialNumber = "" (
            custom token binding:protocol = "rest"
            custom token binding:operation = "read"
            custom string binding:uri = "${apiBase}/devices/${deviceName}"
            custom token binding:method = "GET"
            custom string binding:jsonPath = "$.serialNumber"
            custom token binding:authMethod = "oauth2"
            custom string binding:authProfile = "corp-oauth-prod"
        )

        string maintenanceStatus = "" (
            custom token binding:protocol = "sql"
            custom token binding:operation = "read"
            custom string binding:uri = "${sqlEndpoint}"
            custom string binding:query = "SELECT status FROM maintenance WHERE device_id='${deviceName}'"
        )

        double targetTemperature = 22.0 (
            custom token binding:protocol = "rest"
            custom token binding:operation = "write"
            custom string binding:uri = "${apiBase}/devices/${deviceName}/setpoint"
            custom token binding:method = "POST"
            custom token binding:authMethod = "oauth2"
            custom string binding:authProfile = "corp-oauth-prod"
        )     
    }
}