#usda 1.0

def Scope "HelloWorldAirCon" (
    prepend apiSchemas = ["BindingAPI"]
)
{
    # Vars
    dictionary binding:context = {
        "region": "us-east-1",
        "mqttBroker": "mqtts://test.mosquitto.org:1883",
        "sqlEndpoint": "sql://x6eps4xrq2xudenlfv6naeo3i4-qnsrltphqlxuxjjiiozeegc3aq.msit-datawarehouse.fabric.microsoft.com/alashlakehouse",
        "apiBase": "https://api.test.com"
    }

    # --- Auth Vars ---
    dictionary binding:authDefaults:mqtt = {
        "authMethod": "mtls",
        "authProfile": "alash-broker-prod" #Certs as well in here??
    }
    dictionary binding:authDefaults:sql = {
        "authMethod": "oauth2",
        "authProfile": "alash-fabric-prod"
    }
    dictionary binding:authDefaults:rest = {
        "authMethod": "oauth2",
        "authProfile": "alash-azure-prod"
    }

    # =============================================================
    # Device 1: Air Conditioner
    # =============================================================
    def Cube "AirConditioner_001"
    {
        string deviceName = "aircon3245"

        # MQTT: Streaming temperature telemetry
        double temperature = 0.0 (
            custom token binding:protocol = "mqtt"
            custom token binding:operation = "stream"
            custom string binding:uri = "${mqttBroker}"
            custom string binding:topic = "/hvac/${deviceName}/temperature"
            # authMethod NOT set â†’ will inherit from authDefaults:mqtt
        )

        # REST: Read serial number
        string serialNumber = "" (
            custom token binding:protocol = "rest"
            custom token binding:operation = "read"
            custom string binding:uri = "${apiBase}/devices/${deviceName}"
            custom token binding:method = "GET"
            custom string binding:jsonPath = "$.serialNumber"
            custom token binding:authMethod = "oauth2"
            custom string binding:authProfile = "corp-oauth-prod"
        )

        # SQL: Read maintenance status
        string maintenanceStatus = "" (
            custom token binding:protocol = "sql"
            custom token binding:operation = "read"
            custom string binding:uri = "${sqlEndpoint}"
            custom string binding:query = "SELECT status FROM maintenance WHERE device_id='${deviceName}'"
        )

        # REST: CRAZY? write value back via API? a new setpoint (manual write)
        double targetTemperature = 22.0 (
            custom token binding:protocol = "rest"
            custom token binding:operation = "write"
            custom string binding:uri = "${apiBase}/devices/${deviceName}/setpoint"
            custom token binding:method = "POST"
            custom token binding:authMethod = "oauth2"
            custom string binding:authProfile = "corp-oauth-prod"
        )     
    }
}
